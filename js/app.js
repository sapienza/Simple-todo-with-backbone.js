// Generated by CoffeeScript 1.6.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  $(function() {
    var TodoCollection, TodoModel, TodoView, todoApp;
    TodoModel = (function(_super) {

      __extends(TodoModel, _super);

      function TodoModel() {
        return TodoModel.__super__.constructor.apply(this, arguments);
      }

      TodoModel.prototype.defaults = function() {
        return {
          id: null,
          item: null
        };
      };

      return TodoModel;

    })(Backbone.Model);
    TodoCollection = (function(_super) {

      __extends(TodoCollection, _super);

      function TodoCollection() {
        return TodoCollection.__super__.constructor.apply(this, arguments);
      }

      TodoCollection.prototype.model = TodoModel;

      return TodoCollection;

    })(Backbone.Collection);
    TodoView = (function(_super) {

      __extends(TodoView, _super);

      function TodoView() {
        return TodoView.__super__.constructor.apply(this, arguments);
      }

      TodoView.prototype.el = $('#tasks');

      TodoView.prototype.itemField = $('#new_task');

      TodoView.prototype.collection = new TodoCollection();

      TodoView.prototype.initialize = function() {
        return this.el = $(this.el);
      };

      TodoView.prototype.events = {
        'submit form': 'addItem',
        'click .remove-item': 'removeItem'
      };

      TodoView.prototype.template = $('#task_template').html();

      TodoView.prototype.render = function(id, item) {
        var template;
        template = _.template(this.template);
        return id = this.el.children('ul').append(template({
          id: id,
          item: item
        }));
      };

      TodoView.prototype.addItem = function(e) {
        var id, item, newItem;
        e.preventDefault();
        item = this.itemField.val();
        id = _.uniqueId('todo_');
        this.render(id, item);
        this.itemField.val('');
        this.itemField.focus();
        newItem = new TodoModel({
          id: id,
          item: item
        });
        return this.collection.add(newItem);
      };

      TodoView.prototype.removeItem = function(e) {
        var thisid, thisitem;
        thisid = this.$(e.currentTarget).parent('li').data("id");
        thisitem = this.collection.get(thisid);
        this.collection.remove(thisitem);
        return $(e.target).parent('li').remove();
      };

      return TodoView;

    })(Backbone.View);
    return todoApp = new TodoView({
      collection: new TodoCollection()
    });
  });

}).call(this);
